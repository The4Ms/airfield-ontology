{
    "queries": [
        {
            "desc": "I want to know the available runways in a specific airfield and their lengths",
            "query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n PREFIX owl: <http://www.w3.org/2002/07/owl#> \n PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> \n PREFIX uri: <http://www.semanticweb.org/eng.mahmoud/ontologies/2014/11/AirportOntology#> \n\n SELECT ?runway ?len \n where{ ?airfield a uri:Airfield. \n ?runway a uri:Runway. \n ?airfield uri:AirfieldID ?id. \n ?runway uri:GroundSurfaceIsPartOf ?airfield. \n ?runway uri:Length ?len. \n filter ( ?id = '%s' ). \n }",
            "paramters": [
                {
                    "name": "Airfield ID",
                    "type": "string"
                }
            ]
        },
        {
            "desc": "I want to know to find out which taxiways are locked (identified from the maintenance status) from a certain runway",
            "query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n PREFIX owl: <http://www.w3.org/2002/07/owl#> \n PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> \n PREFIX uri: <http://www.semanticweb.org/eng.mahmoud/ontologies/2014/11/AirportOntology#> \n\n SELECT ?runway ?taxiway \n where{ \n ?runway a uri:Runway. \n ?taxiway a uri:Taxiway. \n ?runway uri:GroundSurfaceName ?name. \n ?runway uri:HasExitTo ?taxiway. \n ?taxiway uri:MaintenanceStatus ?status. \n filter ( ?name = '%s' ). \n filter ( ?status = 'locked'). \n }",
            "paramters": [
                {
                    "name": "Runway Name",
                    "type": "string"
                }
            ]
        },
        {
            "desc": "I want to know which runway or taxiway has 2 aircrafts at the same time",
            "query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n PREFIX owl: <http://www.w3.org/2002/07/owl#> \n PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> \n PREFIX uri: <http://www.semanticweb.org/eng.mahmoud/ontologies/2014/11/AirportOntology#> \n\n SELECT DISTINCT ?location \n where{ \n ?aircraft1 a uri:Aircraft. \n ?aircraft2 a uri:Aircraft. \n ?aircraft1 uri:IsLocatedIn ?location. \n ?aircraft2 uri:IsLocatedIn ?location. \n filter ( ?aircraft1 != ?aircraft2 ). \n } ",
            "paramters": []
        },
        {
            "desc": "I want to know the best gate for the aircraft to land in.",
            "query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n PREFIX owl: <http://www.w3.org/2002/07/owl#> \n PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> \n PREFIX uri: <http://www.semanticweb.org/eng.mahmoud/ontologies/2014/11/AirportOntology#> \n\n SELECT ?aircraft ?aircraftCap ?gate ?gateCap \n where{\n ?aircraft a uri:Aircraft. \n ?gate a uri:Gate. ?aircraft uri:AircraftID ?id. \n ?aircraft uri:IsLocatedIn ?location. \n ?aircraft uri:AircraftPassengerCapacity ?aircraftCap. \n ?gate uri:GatePassengerCapacity ?gateCap. \n ?gate uri:GateIsPartOf ?airfield. \n ?location uri:GroundSurfaceIsPartOf ?airfield. \n filter ( ?gateCap >= ?aircraftCap)  \n filter ( ?id = '%s' ). \n } \n ORDER BY ASC(?gateCap) \n LIMIT 1 ",
            "paramters": [
                {
                    "name": "Aircraft ID",
                    "type": "string"
                }
            ]
        },
        {
            "desc": "I want to verify if there are any aircrafts at a given runway ",
            "query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n PREFIX owl: <http://www.w3.org/2002/07/owl#> \n PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> \n PREFIX uri: <http://www.semanticweb.org/eng.mahmoud/ontologies/2014/11/AirportOntology#> \n\n ASK \n where{ \n ?runway a uri:Runway. \n ?runway uri:GroundSurfaceName ?name. \n ?runway uri:LocationOf ?aircraft. \n filter ( ?name = '%s'). \n }",
            "paramters": [
                {
                    "name": "Runway Name",
                    "type": "string"
                }
            ]
        }
    ]
}